# CI code is based on
# https://github.com/nihui/realsr-ncnn-vulkan/blob/master/.github/workflows/release.yml
# Modified in here for newer vulkan
# https://github.com/onuralpszr/realsr-ncnn-vulkan/blob/vulkan-ci-version/.github/workflows/CI.yml


name: CI
on: [push, pull_request]

env:
  APPLICATION_NAME: gfpgan-ncnn-vulkan

jobs:
  dev-build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v3.3.2
      with:
        path: "VulkanSDK"
        key: VulkanSDK-1.3.250.1-Installer
    - name: cache-opencv
      id: cache-opencv
      uses: actions/cache@v3.3.2
      with:
        path: "OpenCV"
        key: opencv-4.8.1-windows
    - name: vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.3.250.1/windows/VulkanSDK-1.3.250.1-Installer.exe?Human=true -OutFile VulkanSDK-1.3.250.1-Installer.exe
        7z x -aoa ./VulkanSDK-1.3.250.1-Installer.exe -oVulkanSDK
        Remove-Item .\VulkanSDK\Demos -Recurse
    - name: install opencv
      if: steps.cache-opencv.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://github.com/opencv/opencv/releases/download/4.8.1/opencv-4.8.1-windows.exe -OutFile opencv-4.8.1-windows.exe
        7z x -aoa ./opencv-4.8.1-windows.exe -oOpenCV
    - name: build
      run: |
        $env:OpenCV_DIR="$(pwd)/OpenCV/opencv/build"
        $env:VULKAN_SDK="$(pwd)/VulkanSDK"
        mkdir build; cd build
        cmake -A x64 ../src
        cmake --build . --config Release -j 2

  dev-build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v3.3.2
      with:
        path: "1.3.250.1"
        key: vulkansdk-linux-x86_64-1.3.250.1
    - name: setup-vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.3.250.1/linux/vulkansdk-linux-x86_64-1.3.250.1.tar.gz?Human=true -O vulkansdk-linux-x86_64-1.3.250.1.tar.gz
        tar -xf vulkansdk-linux-x86_64-1.3.250.1.tar.gz
        rm -rf 1.3.250.1/source 1.3.250.1/samples
        find 1.3.250.1 -type f | grep -v -E 'vulkan|glslang' | xargs rm
    - name: Build
      run: |
        sudo apt update
        sudo apt install libopencv-dev python3-opencv -y
        export VULKAN_SDK=`pwd`/1.3.250.1/x86_64
        mkdir build && cd build
        cmake ../src
        cmake --build . -j 2

  dev-build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v3.3.2
      with:
        path: "vulkansdk-macos-1.3.250.1"
        key: vulkansdk-macos-1.3.250.1
    - name: vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.3.250.1/mac/vulkansdk-macos-1.3.250.1.dmg?Human=true -O vulkansdk-macos-1.3.250.1.dmg
        hdiutil attach vulkansdk-macos-1.3.250.1.dmg
        sudo /Volumes/VulkanSDK/InstallVulkan.app/Contents/MacOS/InstallVulkan --root $GITHUB_WORKSPACE/vulkansdk-macos-1.3.250.1 --accept-licenses --default-answer --confirm-command install
        hdiutil detach /Volumes/VulkanSDK
    - name: install opencv
      run: |
        brew update
        # brew upgrade
        brew install opencv@4 libomp
    - name: build-x86_64
      run: |
        export LIBOMP_VERSION=$(ls /usr/local/Cellar/libomp | tail -n1)
        export LIBOMP_DIR=/usr/local/Cellar/libomp/$LIBOMP_VERSION
        export LIBOMP_LIB=$LIBOMP_DIR/lib/libomp.dylib
        export OCV_VERSION=$(ls /usr/local/Cellar/opencv | tail -n1)
        export OpenCV_DIR=/usr/local/Cellar/opencv/$OCV_VERSION/lib/cmake/opencv4
        export VULKAN_SDK=$GITHUB_WORKSPACE/vulkansdk-macos-1.3.250.1/macOS
        mkdir build-x86_64 && cd build-x86_64
        cmake -DUSE_STATIC_MOLTENVK=ON -DCMAKE_OSX_ARCHITECTURES="x86_64" \
            -DVulkan_INCLUDE_DIR=$GITHUB_WORKSPACE/vulkansdk-macos-1.3.250.1/MoltenVK/include \
            -DVulkan_LIBRARY=$GITHUB_WORKSPACE/vulkansdk-macos-1.3.250.1/MoltenVK/dylib/macOS/libMoltenVK.dylib \
            -DNCNN_VULKAN=ON -DNCNN_BUILD_TOOLS=OFF -DNCNN_BUILD_EXAMPLES=OFF \
            -DOpenMP_libomp_LIBRARY=$LIBOMP_LIB \
            -DOpenMP_C_LIB_NAMES=libomp \
            -DOpenMP_C_FLAGS="-Xpreprocessor -fopenmp $LIBOMP_LIB -I$LIBOMP_DIR/include" \
            -DOpenMP_CXX_LIB_NAMES=libomp \
            -DOpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp $LIBOMP_LIB -I$LIBOMP_DIR/include" \
            ../src
        cmake --build . -j 3
    - name: build-arm64
      run: |
        export LIBOMP_VERSION=$(ls /usr/local/Cellar/libomp | tail -n1)
        export LIBOMP_DIR=/usr/local/Cellar/libomp/$LIBOMP_VERSION
        export LIBOMP_LIB=$LIBOMP_DIR/lib/libomp.dylib
        export OCV_VERSION=$(ls /usr/local/Cellar/opencv | tail -n1)
        export OpenCV_DIR=/usr/local/Cellar/opencv/$OCV_VERSION/lib/cmake/opencv4
        export VULKAN_SDK=$GITHUB_WORKSPACE/vulkansdk-macos-1.3.250.1/macOS
        mkdir build-arm64 && cd build-arm64
        cmake -DUSE_STATIC_MOLTENVK=ON -DCMAKE_OSX_ARCHITECTURES="arm64" \
            -DVulkan_INCLUDE_DIR=$GITHUB_WORKSPACE/vulkansdk-macos-1.3.250.1/MoltenVK/include \
            -DVulkan_LIBRARY=$GITHUB_WORKSPACE/vulkansdk-macos-1.3.250.1/MoltenVK/dylib/macOS/libMoltenVK.dylib \
            -DNCNN_VULKAN=ON -DNCNN_BUILD_TOOLS=OFF -DNCNN_BUILD_EXAMPLES=OFF \
            -DOpenMP_libomp_LIBRARY=$LIBOMP_LIB \
            -DOpenMP_C_LIB_NAMES=libomp \
            -DOpenMP_C_FLAGS="-Xpreprocessor -fopenmp $LIBOMP_LIB -I$LIBOMP_DIR/include" \
            -DOpenMP_CXX_LIB_NAMES=libomp \
            -DOpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp $LIBOMP_LIB -I$LIBOMP_DIR/include" \
            ../src
        cmake --build . -j 3
